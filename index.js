const { spawn } = require("child_process");
const { readFileSync } = require("fs-extra");
const http = require("http");
const axios = require("axios");
const semver = require("semver");
const logger = require("./utils/log");

/////////////////////////////////////////////
//========= Check node.js version =========//
/////////////////////////////////////////////

// const nodeVersion = semver.parse(process.version);
// if (nodeVersion.major < 13) {
//     logger(`Your Node.js ${process.version} is not supported, it required Node.js 13 to run bot!`, "error");
//     return process.exit(0);
// };

///////////////////////////////////////////////////////////
//========= Create website for dashboard/uptime =========//
///////////////////////////////////////////////////////////

const dashboard = http.createServer(function (_req, res) {
    res.writeHead(200, "OK", { "Content-Type": "text/plain" });
    res.write("ch√†o c·∫≠u ch·ªß tr·ªü l·∫°i, c·∫£m ∆°n ƒë√£ ƒë·ªìng h√†nh c√πng t√¥i ƒë·∫øn t·∫≠n b√¢y gi·ªù<3");
    res.end();
});

dashboard.listen(process.env.port || 0);

logger("Server website opened...", "[ Starting ]");

/////////////////////////////////////////////////////////
//========= Create start bot and make it loop =========//
/////////////////////////////////////////////////////////

function startBot(message) {
    (message) ? logger(message, "[ Starting ]") : "";

    const child = spawn("node", ["--trace-warnings", "--async-stack-traces", "mirai.js"], {
        cwd: __dirname,
        stdio: "inherit",
        shell: true
    });

    child.on("close", (codeExit) => {
        if (codeExit != 0 || global.countRestart && global.countRestart < 5) {
            startBot("Restarting...");
            global.countRestart += 1;
            return;
        } else return;
    });

    child.on("error", function (error) {
        logger("An error occurred: " + JSON.stringify(error), "[ Starting ]");
    });
};
////////////////////////////////////////////////
//========= Check update from Github =========//
////////////////////////////////////////////////


axios.get("https://raw.githubusercontent.com/dhieudzs1tg/db/main/package.json").then((res) => {
    logger(res['data']['name'], "[ NAME ]");
    logger("Version: " + res['data']['version'], "[ VERSION ]");
    logger(res['data']['description'], "[ DESCRIPTION ]");
const chalk = require('chalkercli');
const rainbow = chalk.rainbow(` 
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ ùòæùôßùô§ùô¨ùô£ ùòΩùô§ùô© ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê

         ‚ñÑ‚ñÑ¬∑ ‚ñÑ‚ñÑ‚ñÑ        ‚ñÑ‚ñÑ‚ñå ‚ñê ‚ñÑ‚ñå ‚ñê ‚ñÑ     ‚ñÑ‚ñÑ‚ñÑ‚ñÑ¬∑       ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ
        ‚ñê‚ñà ‚ñå‚ñ™‚ñÄ‚ñÑ ‚ñà¬∑‚ñ™     ‚ñà‚ñà¬∑ ‚ñà‚ñå‚ñê‚ñà‚Ä¢‚ñà‚ñå‚ñê‚ñà    ‚ñê‚ñà ‚ñÄ‚ñà‚ñ™‚ñ™     ‚Ä¢‚ñà‚ñà  
        ‚ñà‚ñà ‚ñÑ‚ñÑ‚ñê‚ñÄ‚ñÄ‚ñÑ  ‚ñÑ‚ñà‚ñÄ‚ñÑ ‚ñà‚ñà‚ñ™‚ñê‚ñà‚ñê‚ñê‚ñå‚ñê‚ñà‚ñê‚ñê‚ñå    ‚ñê‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ ‚ñÑ‚ñà‚ñÄ‚ñÑ  ‚ñê‚ñà.‚ñ™
        ‚ñê‚ñà‚ñà‚ñà‚ñå‚ñê‚ñà‚Ä¢‚ñà‚ñå‚ñê‚ñà‚ñå.‚ñê‚ñå‚ñê‚ñà‚ñå‚ñà‚ñà‚ñê‚ñà‚ñå‚ñà‚ñà‚ñê‚ñà‚ñå    ‚ñà‚ñà‚ñÑ‚ñ™‚ñê‚ñà‚ñê‚ñà‚ñå.‚ñê‚ñå ‚ñê‚ñà‚ñå¬∑
        ¬∑‚ñÄ‚ñÄ‚ñÄ .‚ñÄ  ‚ñÄ ‚ñÄ‚ñà‚ñÑ‚ñÄ‚ñ™ ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñ™‚ñÄ‚ñÄ ‚ñà‚ñ™    ¬∑‚ñÄ‚ñÄ‚ñÄ‚ñÄ  ‚ñÄ‚ñà‚ñÑ‚ñÄ‚ñ™ ‚ñÄ‚ñÄ‚ñÄ 
                         ùêñùêû ùêöùê´ùêû ùêöùê•ùê• ùêÜùê®ùê•ùêùùêûùêß..

- ùó¶ùòÅùóÆùóøùòÅùó∂ùóªùó¥ ùóñùóøùóºùòÑùóª ùóïùóºùòÅ ùó©ùó≤ùóøùòÄùó∂ùóºùóª ùü≠.ùü¨.ùüµ
- ùóïùóºùòÅ ùóßùòÜùóΩùó≤: miraiv2
- ùó¢ùòÑùóªùó≤ùóø: dhieu
- ùóñùóºùóªùòÅùóÆùó∞ùòÅ: fb.com/dhieudzs1tg
- ùó±ùó≤ùóº ùóªùóµùóÆùóª ùóØùóÆùóª ùó≥ùó∂ùóπùó≤, ùòÄùóµùóÆùóøùó≤ ùó≥ùó∂ùóπùó≤, ùòÅùóµùòÇùó≤ ùóØùóºùòÅ, ùó∫ùòÇùóºùóª ùóØùóºùòÅ ùóªùóµùó≤ ùó∞ùóÆùó∞ ùó∞ùóºùóª ùòÉùóº ;)

‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ ùòæùôßùô§ùô¨ùô£ ùôèùôöùôñùô¢ ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

`).stop(); // Don't start the animation

rainbow.render(); // Display the first frame

const frame = rainbow.frame(); // Get the second frame
console.log(frame);
});
startBot();
/*axios.get("https://raw.githubusercontent.com/d-jukie/miraiv2_fix/main/package.json").then((res) => {
    const local = JSON.parse(readFileSync('./package.json'));
    if (semver['lt'](local.version, res['data']['version'])) {
        if (local.autoUpdate == !![]) {
            logger('A new update is available, start update processing...', '[ UPDATE ]');
            const updateBot = {};
            updateBot.cwd = __dirname
            updateBot.stdio = 'inherit' 
            updateBot.shell = !![];
            const child = spawn('node', ['update.js'], updateBot);
            child.on('exit', function () {
                return process.exit(0);
            })
            child.on('error', function (error) {
                logger('Unable to update:' + JSON.stringify(error), '[ CHECK UPDATE ]');
            });
        } else logger('A new update is available! Open terminal/cmd and type "node update" to update!', '[ UPDATE ]'), 
        startBot();
    } else logger('You are using the latest version!', '[ CHECK UPDATE ]'), startBot();
}).catch(err => logger("Unable to check update.", "[ CHECK UPDATE ]"));*/
// THIZ BOT WAS MADE BY ME(CATALIZCS) AND MY BROTHER SPERMLORD - DO NOT STEAL MY CODE („Å§ Õ° ¬∞ Õú ñ Õ°¬∞ )„Å§ ‚úÑ ‚ï∞‚ãÉ‚ïØ
